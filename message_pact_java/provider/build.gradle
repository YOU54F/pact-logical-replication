plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
  id "au.com.dius.pact" version "4.1.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'au.com.dius.pact.provider:junit5:4.1.7'
	testImplementation 'au.com.dius.pact.provider:spring:4.1.7'
	runtimeOnly 'com.h2database:h2'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'com.github.javafaker:javafaker:1.0.2'
}

test {
	useJUnitPlatform()
}

pact {

    // broker {
    //     pactBrokerUrl = System.getenv('PACT_BROKER_BASE_URL') ? '':"gooo"

    //     pactBrokerToken = System.getenv('PACT_BROKER_TOKEN') ? '':""
    // }

    // serviceProviders {
	// 		"pactflow-example-provider" {
 	// 			fromPactBroker {
    //     	// selectors = latestTags('master') // specify your tags here. You can leave this out to just use the latest pacts
    //   	}
	// 		}
    // }
	    serviceProviders {

        // You can define as many as you need, but each must have a unique name
			"pactflow-example-provider" {
            // All the provider properties are optional, and have sensible defaults (shown below)
            // protocol = 'http'
            // host = 'localhost'
            // port = 8080
            // path = '/'

            // Again, you can define as many consumers for each provider as you need, but each must have a unique name
            hasPactWith('pactflow-example-consumer-java-kafka"') {

                // currently supports a file path using file() or a URL using url()
                pactSource = file('../consumer/build/pacts/pactflow-example-consumer-java-kafka-pactflow-example-provider-java-kafka.json')

            }

            // Or if you have many pact files in a directory
            // hasPactsWith('manyConsumers') {

            //     // Will define a consumer for each pact file in the directory.
            //     // Consumer name is read from contents of pact file
            //     pactFileLocation = file('../consumer/build/pacts')

            // }
			}}
}